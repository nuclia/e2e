name: run-nuclia-e2e-prod
run-name: Running e2e PROD NUCLIA tests
on:
  push:
    branches:
      - '**'
    paths:
      - '.github/workflows/run-e2e-nuclia-prod.yml'  # Runs only if this file is modified
  workflow_dispatch:  # Allow manual run from any branch
  schedule:
    # Run every day at 04:25
    - cron: '25 4 * * *'
jobs:
  test:
    runs-on: ubuntu-22.04
    name: test-${{ matrix.zone }}_#${{ matrix.shard_index }}
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        zone: [gke-prod-1, aws-us-east-2-1, aws-il-central-1-1]
        shard_index: [0, 1, 2]  # Running tests in 3 parallel shards
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r nuclia_e2e/requirements.txt
          pip install -e nuclia_e2e

      - name: "Run tests"
        env: # Or as an environment variable
          PROD_PERMAMENT_ACCOUNT_OWNER_PAT_TOKEN: ${{ secrets.PROD_PERMAMENT_ACCOUNT_OWNER_PAT_TOKEN }}
          PROD_ROOT_PAT_TOKEN: ${{ secrets.PROD_ROOT_PAT_TOKEN }}
          PROD_GLOBAL_RECAPTCHA: ${{ secrets.PROD_GLOBAL_RECAPTCHA }}
          TEST_EUROPE1_NUCLIA_NUA: ${{ secrets.TEST_EUROPE1_NUCLIA_NUA }}
          TEST_AWS_US_EAST_2_1_NUCLIA_NUA: ${{ secrets.TEST_AWS_US_EAST_2_1_NUCLIA_NUA }}
          TEST_AWS_IL_CENTRAL_1_1_NUCLIA_NUA: ${{ secrets.TEST_AWS_IL_CENTRAL_1_1_NUCLIA_NUA }}
          TEST_GMAIL_APP_PASSWORD: ${{ secrets.TEST_GMAIL_APP_PASSWORD }}
          GRAFANA_URL: ${{ secrets.GRAFANA_URL }}
          TEST_ZONES: ${{ matrix.zone }}
          TEST_ENV: "prod"

        run: |
          pytest -sxvr nuclia_e2e/nuclia_e2e/tests \
            --durations=0 --junitxml=nuclia-${{ matrix.shard_index }}.xml \
            --shard-id=${{ matrix.shard_index }} --num-shards=3

      - name: Mark failure for zone
        if: failure()
        run: echo "${{ matrix.zone }}" > failed_zone.txt

      - name: Upload failed zone (if failed)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: failed-zone-${{ matrix.zone }}-${{ matrix.shard_index }}
          path: failed_zone.txt
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v4
        if: success() || failure() # always run even if the previous step fails
        with:
          report_paths: 'nuclia-*.xml'


  notify:
    runs-on: ubuntu-latest
    needs: test
    if: always()  # Always run to check if any zone failed
    steps:
      - name: Download all failure artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-failed-zones

      - name: Collect unique failed zones
        id: collect
        run: |
          if [ -d all-failed-zones ]; then
            failed_zones=$(cat all-failed-zones/**/failed_zone.txt | sort | uniq | tr '\n' ',' | sed 's/,$//')
            echo "failed_zones=$failed_zones" >> $GITHUB_OUTPUT
          else
            echo "failed_zones=" >> $GITHUB_OUTPUT
          fi

      - name: Send Slack Notification
        if: ${{ steps.collect.outputs.failed_zones != '' && github.ref_name == 'main' }}
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "⚠️ Tests failed in zones: ${{ steps.collect.outputs.failed_zones }}\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.NUA_E2E_SLACK_WEBHOOK }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      # Always run to check if any zone failed. THis is needed because otherwise the `continue-on-error: true on the test config would make it always a success`
      - name: Mark workflow as failed if any zone failed
        if: ${{ steps.collect.outputs.failed_zones != '' }}
        run: |
          echo "One or more test zones failed: ${{ steps.collect.outputs.failed_zones }}"
          exit 1
